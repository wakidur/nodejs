/* 
    Created on : April 03, 2016, 12:40:26 PM
    Author     : wakidur
*/
/* =========Mixins============ */
.a,
#b {
  color: red;
}
.mixin-class {
  color: red;
}
.mixin-id {
  color: red;
}
/*Not Outputting the Mixin*/
.my-mixin {
  color: black;
}
.class-in {
  color: black;
  background-color: white;
}
.container {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}
.container-fluid {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}
@media (min-width: 768px) {
  .container {
    width: 750px;
  }
}
@media (min-width: 992px) {
  .container {
    width: 970px;
  }
}
@media (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}
/*Selectors in Mixins*/
/*mixins can contain more than just properties, they cna contain selector too.*/
button:hover {
  border: 1px solid red;
}
#outer .inner {
  color: red;
}
.c {
  color: red;
}
.c {
  color: red;
}
.c {
  color: red;
}
.c {
  color: red;
}
.c {
  color: red;
}
/*Guarded Namespaces*/
/*If namespace have a guard, mixins defined by it are used only if guard condition returns true. Namespace guard is evaluated exactly the same way as guard on mixin, so next two minxins work the same way*/
/*
#namespace when (@mode = huge ) {
    .mixin(){
        /*  /
    }
}

#namespace{
    .mixin() when (@mode = huge ) {
        /* dfd fd /
    }
}


#sp_1 when (default()) {
    #sp_2 when (default()){
        .mixin() when not (default()){
            /*dfdf/
        }
    }
}
*/
/*The !important keyword*/
.unipportant {
  background-color: #f5f5f5;
  color: #900;
}
.important {
  background-color: #f5f5f5 !important;
  color: #900 !important;
}
.important {
  background-color: #f5f5f5 !important;
  color: #900 !important;
}
